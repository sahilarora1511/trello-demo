{"remainingRequest":"/home/bitqit/Desktop/trello-copy-2/node_modules/babel-loader/lib/index.js!/home/bitqit/Desktop/trello-copy-2/node_modules/eslint-loader/index.js??ref--13-0!/home/bitqit/Desktop/trello-copy-2/src/store.js","dependencies":[{"path":"/home/bitqit/Desktop/trello-copy-2/src/store.js","mtime":1627329623724},{"path":"/home/bitqit/Desktop/trello-copy-2/node_modules/cache-loader/dist/cjs.js","mtime":1624458685215},{"path":"/home/bitqit/Desktop/trello-copy-2/node_modules/babel-loader/lib/index.js","mtime":1615270589723},{"path":"/home/bitqit/Desktop/trello-copy-2/node_modules/eslint-loader/index.js","mtime":1624458686686}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL2JpdHFpdC9EZXNrdG9wL3RyZWxsby1jb3B5LTIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBWdWV4IGZyb20gJ3Z1ZXgnOwppbXBvcnQgZGVmYXVsdEJvYXJkIGZyb20gJy4vZGVmYXVsdC1ib2FyZCc7CmltcG9ydCB7IHNhdmVTdGF0ZVBsdWdpbiB9IGZyb20gIi4vdXRpbHMiOwpWdWUudXNlKFZ1ZXgpOwp2YXIgYm9hcmQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdib2FyZCcpKSB8fCBkZWZhdWx0Qm9hcmQ7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBwbHVnaW46IFtzYXZlU3RhdGVQbHVnaW5dLAogIC8vIHN0YXRlOnsKICAvLyAgICAgYm9hcmQ6IGRlZmF1bHRCb2FyZAogIC8vIH0sCiAgc3RhdGU6IHsKICAgIGJvYXJkOiBib2FyZAogIH0sCiAgbXV0YXRpb25zOiB7fSwKICBnZXR0ZXJzOiB7CiAgICBnZXRUYXNrOiBmdW5jdGlvbiBnZXRUYXNrKHN0YXRlKSB7CiAgICAgIHJldHVybiBmdW5jdGlvbiAoaWQpIHsKICAgICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoc3RhdGUuYm9hcmQuY29sdW1ucyksCiAgICAgICAgICAgIF9zdGVwOwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgdmFyIGNvbHVtbiA9IF9zdGVwLnZhbHVlOwoKICAgICAgICAgICAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihjb2x1bW4udGFza3MpLAogICAgICAgICAgICAgICAgX3N0ZXAyOwoKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICAgICAgICAgICAgdmFyIHRhc2sgPSBfc3RlcDIudmFsdWU7CgogICAgICAgICAgICAgICAgaWYgKHRhc2suaWQgPT09IGlkKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB0YXNrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgICAgX2l0ZXJhdG9yMi5lKGVycik7CiAgICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgICAgX2l0ZXJhdG9yMi5mKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgICAgfQogICAgICB9OwogICAgfQogIH0KfSk7"},{"version":3,"sources":["/home/bitqit/Desktop/trello-copy-2/src/store.js"],"names":["Vue","Vuex","defaultBoard","saveStatePlugin","use","board","JSON","parse","localStorage","getItem","Store","plugin","state","mutations","getters","getTask","id","columns","column","tasks","task"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAAQC,eAAR,QAA8B,SAA9B;AAEAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AAEA,IAAMI,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6CP,YAA3D;AAEA,eAAe,IAAID,IAAI,CAACS,KAAT,CAAe;AAC1BC,EAAAA,MAAM,EAAC,CAACR,eAAD,CADmB;AAE1B;AACA;AACA;AACAS,EAAAA,KAAK,EAAC;AACFP,IAAAA,KAAK,EAALA;AADE,GALoB;AAQ1BQ,EAAAA,SAAS,EAAC,EARgB;AAS1BC,EAAAA,OAAO,EAAC;AACJC,IAAAA,OADI,mBACIH,KADJ,EACU;AACV,aAAM,UAACI,EAAD,EAAO;AAAA,mDACWJ,KAAK,CAACP,KAAN,CAAYY,OADvB;AAAA;;AAAA;AACT,8DAAwC;AAAA,gBAA9BC,MAA8B;;AAAA,wDAClBA,MAAM,CAACC,KADW;AAAA;;AAAA;AACpC,qEAA+B;AAAA,oBAArBC,IAAqB;;AAC3B,oBAAGA,IAAI,CAACJ,EAAL,KAAYA,EAAf,EAAkB;AACd,yBAAOI,IAAP;AACH;AACJ;AALmC;AAAA;AAAA;AAAA;AAAA;AAMvC;AAPQ;AAAA;AAAA;AAAA;AAAA;AAQZ,OARD;AASH;AAXG;AATkB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport defaultBoard from './default-board'\nimport {saveStatePlugin} from \"./utils\";\n\nVue.use(Vuex)\n\nconst board = JSON.parse(localStorage.getItem('board')) || defaultBoard\n\nexport default new Vuex.Store({\n    plugin:[saveStatePlugin],\n    // state:{\n    //     board: defaultBoard\n    // },\n    state:{\n        board\n    },\n    mutations:{},\n    getters:{\n        getTask(state){\n            return(id) =>{\n                for(const column of state.board.columns){\n                    for(const task of column.tasks){\n                        if(task.id === id){\n                            return task;\n                        }\n                    }\n                }\n            }\n        }\n    }\n})\n"]}]}
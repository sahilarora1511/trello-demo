{"remainingRequest":"/home/bitqit/Desktop/trello-copy-2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bitqit/Desktop/trello-copy-2/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bitqit/Desktop/trello-copy-2/src/App.vue","mtime":1627331682731},{"path":"/home/bitqit/Desktop/trello-copy-2/node_modules/cache-loader/dist/cjs.js","mtime":1624458685215},{"path":"/home/bitqit/Desktop/trello-copy-2/node_modules/babel-loader/lib/index.js","mtime":1615270589723},{"path":"/home/bitqit/Desktop/trello-copy-2/node_modules/cache-loader/dist/cjs.js","mtime":1624458685215},{"path":"/home/bitqit/Desktop/trello-copy-2/node_modules/vue-loader/lib/index.js","mtime":1626987506761}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQge21hcFN0YXRlfSBmcm9tICd2dWV4JzsKaW1wb3J0ICJ0YWlsd2luZGNzcy90YWlsd2luZC5jc3MiCi8vIGltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAndnVleCcKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBcHAnLAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZShbJ2JvYXJkJ10pLAogICAgLy8gLi4ubWFwR2V0dGVycyhbJ2dldFRhc2snXSksCiAgICBpc1Rhc2tPcGVuKCl7CiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5uYW1lID09PSAndGFzaycKICAgIH0sCiAgICAvLyB0YXNrKCl7CiAgICAvLyAgIGNvbnNvbGUubG9nKHRoaXMuZ2V0VGFzayh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpKQogICAgLy8gICByZXR1cm4gdGhpcy5nZXRUYXNrKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkKICAgIC8vIH0KICB9LAogIG1ldGhvZHM6ewogICAgZ2V0VGFzaygpewogICAgICBsZXQgaWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQ7CiAgICAgIGNvbnNvbGUubG9nKGlkLCB0aGlzLmJvYXJkLmNvbHVtbnMpOwogICAgICAvLyBmb3IobGV0IGNvbHVtbiBpbiB0aGlzLmJvYXJkLmNvbHVtbnMpewogICAgICAvLyAgIGNvbnNvbGUubG9nKHRoaXMuYm9hcmQuY29sdW1uc1tjb2x1bW5dLnRhc2tzKQogICAgICAvLyB9CiAgICAgICAgZm9yKGxldCBjb2x1bW4gaW4gdGhpcy5ib2FyZC5jb2x1bW5zKXsKICAgICAgICAgIGZvcihsZXQgdGFzayBpbiB0aGlzLmJvYXJkLmNvbHVtbnNbY29sdW1uXS50YXNrcyl7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuYm9hcmQuY29sdW1uc1tjb2x1bW5dLnRhc2tzW3Rhc2tdLmlkKQogICAgICAgICAgICBpZih0aGlzLmJvYXJkLmNvbHVtbnNbY29sdW1uXS50YXNrc1t0YXNrXS5pZCA9PSBpZCl7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2hlcmUnKQogICAgICAgICAgICAgIHJldHVybiB0YXNrOwogICAgICAgICAgICB9CiAgICAgICAgICBlbHNlewogICAgICAgICAgICBjb25zb2xlLmxvZygnb3ZlciBoZXJlJykKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"board\">\n    <div class=\"page\">\n      <div class=\"column\" v-for=\"(column,index) in board.columns\" :key=\"index\">\n        <div class=\"name\">\n          {{column.name}}\n        </div>\n      <div class=\"list-rest\">\n        <div class=\"task\" v-for=\"task in column.tasks\" :key=\"task.id\">\n            <span class=\"task-name\">{{task.name}}</span>\n            <span class=\"task-description\" v-if=\"task.description\">{{task.description}}</span>\n        </div>\n      </div>\n      </div>\n    </div>\n    <div class=\"task-bg\" v-if=\"isTaskOpen\">\n<!--      <router-view/>-->\n      <div class=\"task-view\">\n        <div class=\"here\">\n          {{getTask()}}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport {mapState} from 'vuex';\nimport \"tailwindcss/tailwind.css\"\n// import {mapGetters} from 'vuex'\nexport default {\n  name: 'App',\n  computed: {\n    ...mapState(['board']),\n    // ...mapGetters(['getTask']),\n    isTaskOpen(){\n      return this.$route.name === 'task'\n    },\n    // task(){\n    //   console.log(this.getTask(this.$route.params.id))\n    //   return this.getTask(this.$route.params.id)\n    // }\n  },\n  methods:{\n    getTask(){\n      let id = this.$route.params.id;\n      console.log(id, this.board.columns);\n      // for(let column in this.board.columns){\n      //   console.log(this.board.columns[column].tasks)\n      // }\n        for(let column in this.board.columns){\n          for(let task in this.board.columns[column].tasks){\n            console.log(this.board.columns[column].tasks[task].id)\n            if(this.board.columns[column].tasks[task].id == id){\n              console.log('here')\n              return task;\n            }\n          else{\n            console.log('over here')\n            }\n          }\n        }\n    }\n  }\n}\n</script>\n\n<style>\n.board {\n  margin: 20px;\n}\n\n.page{\n  display: flex;\n}\n\n.column {\n  width: 310px;\n  margin-right: 40px;\n  background-color: lightgrey;\n  border-radius: 6px;\n}\n\n.name {\n  font-weight: bold;\n  font-size: 16px;\n  margin-bottom: 6px;\n  margin-left: 10px;\n  margin-top: 4px;\n}\n\n.task {\n  background-color: white;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 9px;\n}\n\nspan.task-name {\n  font-weight: 500;\n}\n\nspan.task-description {\n  margin-top: 5px;\n  display: block;\n}\n\n</style>\n"]}]}
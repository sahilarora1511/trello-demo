{"remainingRequest":"/home/bitqit/Desktop/trello-copy-2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bitqit/Desktop/trello-copy-2/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/bitqit/Desktop/trello-copy-2/src/App.vue","mtime":1627728014786},{"path":"/home/bitqit/Desktop/trello-copy-2/node_modules/css-loader/dist/cjs.js","mtime":1616148274586},{"path":"/home/bitqit/Desktop/trello-copy-2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1626987506761},{"path":"/home/bitqit/Desktop/trello-copy-2/node_modules/postcss-loader/src/index.js","mtime":1618731900336},{"path":"/home/bitqit/Desktop/trello-copy-2/node_modules/cache-loader/dist/cjs.js","mtime":1624458685215},{"path":"/home/bitqit/Desktop/trello-copy-2/node_modules/vue-loader/lib/index.js","mtime":1626987506761}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5ib2FyZCB7CiAgbWFyZ2luOiAyMHB4Owp9CgoucGFnZXsKICBkaXNwbGF5OiBmbGV4Owp9CgouY29sdW1uIHsKICBkaXNwbGF5OiBibG9jazsKICBtaW4td2lkdGg6IDMyMHB4OwogIG1heC13aWR0aDogMzIwcHg7CiAgbWFyZ2luLXJpZ2h0OiA0MHB4OwogIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JleTsKICBib3JkZXItcmFkaXVzOiA2cHg7CiAgb3ZlcmZsb3c6IGF1dG87CiAgaGVpZ2h0OiAxMDAlOwp9CgoubmFtZSB7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgZm9udC1zaXplOiAxNnB4OwogIG1hcmdpbi1ib3R0b206IDZweDsKICBtYXJnaW4tbGVmdDogMTBweDsKICBtYXJnaW4tdG9wOiA0cHg7Cn0KCi50YXNrIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICBtYXJnaW46IDEwcHg7CiAgcGFkZGluZzogMTBweDsKICBib3JkZXItcmFkaXVzOiA5cHg7Cn0KCnNwYW4udGFzay1uYW1lIHsKICBmb250LXdlaWdodDogNTAwOwogIGZvbnQtc2l6ZTogMThweDsKfQoKc3Bhbi50YXNrLWRlc2NyaXB0aW9uIHsKICBtYXJnaW4tdG9wOiA1cHg7CiAgZGlzcGxheTogYmxvY2s7CiAgZm9udC1zaXplOjE0cHgKfQoKLyogVGhlIE1vZGFsIChiYWNrZ3JvdW5kKSAqLwoubW9kYWwgewogIGRpc3BsYXk6IGJsb2NrOyAvKiBIaWRkZW4gYnkgZGVmYXVsdCAqLwogIHBvc2l0aW9uOiBmaXhlZDsgLyogU3RheSBpbiBwbGFjZSAqLwogIHotaW5kZXg6IDE7IC8qIFNpdCBvbiB0b3AgKi8KICBwYWRkaW5nLXRvcDogMTAwcHg7IC8qIExvY2F0aW9uIG9mIHRoZSBib3ggKi8KICBsZWZ0OiAwOwogIHRvcDogMDsKICB3aWR0aDogMTAwJTsgLyogRnVsbCB3aWR0aCAqLwogIGhlaWdodDogMTAwJTsgLyogRnVsbCBoZWlnaHQgKi8KICBvdmVyZmxvdzogYXV0bzsgLyogRW5hYmxlIHNjcm9sbCBpZiBuZWVkZWQgKi8KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwwLDApOyAvKiBGYWxsYmFjayBjb2xvciAqLwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC40KTsgLyogQmxhY2sgdy8gb3BhY2l0eSAqLwp9CgovKiBNb2RhbCBDb250ZW50ICovCi5tb2RhbC1jb250ZW50IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZWZlOwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7CiAgd2lkdGg6IDMwJTsKICBoZWlnaHQ6IDMwJTsKfQoKLyogVGhlIENsb3NlIEJ1dHRvbiAqLwouY2xvc2UgewogIGNvbG9yOiAjYWFhYWFhOwogIGZsb2F0OiByaWdodDsKICBmb250LXNpemU6IDI4cHg7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi5jbG9zZTpob3ZlciwKLmNsb3NlOmZvY3VzIHsKICBjb2xvcjogIzAwMDsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgpzcGFuLnRleHRhcmVhIHRleHRhcmVhIHsKICB3aWR0aDogMTAwJTsKICBtaW4taGVpZ2h0OiA1MCU7Cn0KCi5pbnB1dFRleHQgewogIGJvcmRlcjogbm9uZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICBtYXJnaW46IDEwcHg7CiAgcGFkZGluZzogMTBweDsKICBib3JkZXItcmFkaXVzOiA5cHg7CiAgd2lkdGg6IDgwJTsKfQoKLnRhc2tOYW1lTW9kYWwgaW5wdXQgewogIGZvbnQtc2l6ZTogMThweDsKICBmb250LXdlaWdodDogNjAwOwogIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgd2lkdGg6IDkwJTsKICBwYWRkaW5nOiAxMHB4IDhweDsKICBib3JkZXI6IDAuNXB4IHNvbGlkICNkZGQ7CiAgYm9yZGVyLXJhZGl1czogNnB4Owp9Cgo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"board\">\n    <div class=\"page\">\n      <div class=\"column\" v-for=\"(column,$columnIndex) in board.columns\" :key=\"$columnIndex\" @drop=\"moveTask($event, column.tasks)\" @dragover.prevent @dragenter.prevent>\n        <div class=\"name\">\n          {{column.name}}\n        </div>\n      <div class=\"list-rest\">\n        <div class=\"task\" v-for=\"(task, $taskIndex) in column.tasks\" :key=\"$taskIndex\" @click=\"openModal(task)\" draggable @dragstart=\"pickUpTask($event, $taskIndex, $columnIndex)\">\n            <span class=\"task-name\">{{task.name}}</span>\n            <span class=\"task-description\" v-if=\"task.description\">{{task.description}}</span>\n        </div>\n      </div>\n\n        <input class=\"inputText\" type=\"text\" placeholder=\"+ Add a card (type then press enter)\"  @keyup.enter=\"createTask($event,column.tasks)\"/>\n      </div>\n\n      <div class=\"column\">\n        <input class=\"inputText\" type=\"text\" placeholder=\"+ Add a new list (type then press enter)\" v-model=\"newColumnName\" @keyup.enter=\"createColumn()\"/>\n      </div>\n\n    </div>\n\n    <div id=\"myModal\" class=\"modal\" v-show=\"isTaskOpen\" @click.self=\"closeModal()\">\n\n      <!-- Modal content -->\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"closeModal()\">&times;</span>\n<!--        <p>{{this.taskName}}</p>-->\n        <span class=\"taskNameModal\"><input :value=\"this.taskName\" @change=\"updateTaskProperty($event,'name')\" /></span>\n        <span class=\"textarea\"><textarea :value=\"this.description\" @change=\"updateTaskProperty($event,'description')\"></textarea></span>\n      </div>\n\n    </div>\n\n  </div>\n</template>\n\n<script>\n\nimport {mapState} from 'vuex';\nimport \"tailwindcss/tailwind.css\"\nimport {mapGetters} from 'vuex'\nexport default {\n  name: 'App',\n  data(){\n    return{\n      description:\"\",\n      taskName:\"\",\n      newColumnName: \"\"\n    }\n  },\n  computed: {\n    ...mapState(['board']),\n    ...mapGetters(['getTaskStore']),\n    isTaskOpen(){\n      return this.$route.name === 'task'\n    },\n    task(){\n      return this.getTaskStore(this.$route.params.id)\n    }\n  },\n  methods:{\n    getTask(){\n      let id = this.$route.params.id;\n        for(let column in this.board.columns){\n          for(let task in this.board.columns[column].tasks){\n            if(this.board.columns[column].tasks[task].id == id){\n              this.description = this.board.columns[column].tasks[task].description;\n              this.taskName = this.board.columns[column].tasks[task].name;\n              // return this.board.columns[column].tasks[task].name;\n            }\n          }\n        }\n    },\n\n    getTaskById(task){\n      this.$router.push({name:'task', params:{id:task.id}});\n      this.getTask()\n    },\n\n    openModal(task){\n      this.getTaskById(task);\n// When the user clicks anywhere outside of the modal, close it\n//       window.onclick = function(event) {\n//         if (event.target == modal) {\n//           modal.style.display = \"none\";\n//         }\n//       }\n    },\n\n    closeModal(){\n      this.$router.push({name:'/'})\n    },\n\n    createTask(e,tasks){\n      this.$store.commit('CREATE_TASK',{\n        tasks,\n        name: e.target.value\n      });\n      e.target.value=\"\";\n    },\n\n    updateTaskProperty(e, key){\n      this.$store.commit('UPDATE_TASK',{\n          task : this.task,\n          key,\n          value : e.target.value\n      })\n      if(key==='name'){\n        this.taskName = e.target.value\n      }\n      else{\n        this.description = e.target.value\n      }\n    },\n\n    pickUpTask(e, taskIndex, fromColumnIndex){\n      e.dataTransfer.effectAllowed = 'move'\n      e.dataTransfer.dropEffect = 'move'\n      e.dataTransfer.setData('task-index', taskIndex)\n      e.dataTransfer.setData('from-column-index', fromColumnIndex)\n    },\n\n    moveTask(e, toTasks){\n      const fromColumnIndex = e.dataTransfer.getData('from-column-index')\n      const fromTasks = this.board.columns[fromColumnIndex].tasks;\n      const taskIndex = e.dataTransfer.getData('task-index')\n\n      this.$store.commit('MOVE_TASK',{\n          fromTasks,\n          toTasks,\n          taskIndex\n      })\n    },\n\n    createColumn(){\n      this.$store.commit('CREATE_COLUMN', {\n        name: this.newColumnName\n      })\n      this.newColumnName = '';\n    }\n\n  }\n}\n</script>\n\n<style>\n.board {\n  margin: 20px;\n}\n\n.page{\n  display: flex;\n}\n\n.column {\n  display: block;\n  min-width: 320px;\n  max-width: 320px;\n  margin-right: 40px;\n  background-color: lightgrey;\n  border-radius: 6px;\n  overflow: auto;\n  height: 100%;\n}\n\n.name {\n  font-weight: bold;\n  font-size: 16px;\n  margin-bottom: 6px;\n  margin-left: 10px;\n  margin-top: 4px;\n}\n\n.task {\n  background-color: white;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 9px;\n}\n\nspan.task-name {\n  font-weight: 500;\n  font-size: 18px;\n}\n\nspan.task-description {\n  margin-top: 5px;\n  display: block;\n  font-size:14px\n}\n\n/* The Modal (background) */\n.modal {\n  display: block; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  padding-top: 100px; /* Location of the box */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n  background-color: #fefefe;\n  margin: auto;\n  padding: 20px;\n  border: 1px solid #888;\n  width: 30%;\n  height: 30%;\n}\n\n/* The Close Button */\n.close {\n  color: #aaaaaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n  color: #000;\n  text-decoration: none;\n  cursor: pointer;\n}\n\nspan.textarea textarea {\n  width: 100%;\n  min-height: 50%;\n}\n\n.inputText {\n  border: none;\n  background-color: white;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 9px;\n  width: 80%;\n}\n\n.taskNameModal input {\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 10px;\n  width: 90%;\n  padding: 10px 8px;\n  border: 0.5px solid #ddd;\n  border-radius: 6px;\n}\n\n</style>\n"]}]}